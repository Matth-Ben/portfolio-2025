---
// ScrollAnimations component for GSAP + Lenis integration
---

<script>
  import { gsap } from 'gsap';
  import { ScrollTrigger } from 'gsap/ScrollTrigger';

  // Register ScrollTrigger plugin
  gsap.registerPlugin(ScrollTrigger);

  // Wait for Lenis to be available
  function initScrollAnimations() {
    if (typeof window !== 'undefined' && (window as any).lenis) {
      const lenis = (window as any).lenis;

      // Connect Lenis to ScrollTrigger
      lenis.on('scroll', ScrollTrigger.update);

      gsap.ticker.add((time) => {
        lenis.raf(time * 1000);
      });

      gsap.ticker.lagSmoothing(0);

      // Add scroll animations
      addScrollAnimations();
    } else {
      // Retry if Lenis is not ready yet
      setTimeout(initScrollAnimations, 100);
    }
  }

  function addScrollAnimations() {
    // Fade in animations for sections
    gsap.utils.toArray('.fade-in').forEach((element: any) => {
      gsap.fromTo(element, 
        { 
          opacity: 0, 
          y: 50 
        },
        {
          opacity: 1,
          y: 0,
          duration: 1,
          ease: 'power2.out',
          scrollTrigger: {
            trigger: element,
            start: 'top 80%',
            end: 'bottom 20%',
            toggleActions: 'play none none reverse'
          }
        }
      );
    });

    // Slide in animations for cards
    gsap.utils.toArray('.slide-in').forEach((element: any, index: number) => {
      gsap.fromTo(element,
        {
          opacity: 0,
          x: index % 2 === 0 ? -50 : 50
        },
        {
          opacity: 1,
          x: 0,
          duration: 0.8,
          ease: 'power2.out',
          delay: index * 0.1,
          scrollTrigger: {
            trigger: element,
            start: 'top 85%',
            toggleActions: 'play none none reverse'
          }
        }
      );
    });

    // Scale animations for stats
    gsap.utils.toArray('.scale-in').forEach((element: any) => {
      gsap.fromTo(element,
        {
          scale: 0,
          opacity: 0
        },
        {
          scale: 1,
          opacity: 1,
          duration: 0.6,
          ease: 'back.out(1.7)',
          scrollTrigger: {
            trigger: element,
            start: 'top 80%',
            toggleActions: 'play none none reverse'
          }
        }
      );
    });

    // Parallax effect for hero sections
    gsap.utils.toArray('.parallax').forEach((element: any) => {
      gsap.to(element, {
        yPercent: -20,
        ease: 'none',
        scrollTrigger: {
          trigger: element,
          start: 'top bottom',
          end: 'bottom top',
          scrub: true
        }
      });
    });
  }

  // Initialize when DOM is ready
  if (typeof document !== 'undefined') {
    document.addEventListener('DOMContentLoaded', initScrollAnimations);
  }
</script>

<style>
  /* CSS classes for scroll animations */
  .fade-in {
    opacity: 0;
    transform: translateY(50px);
  }

  .slide-in {
    opacity: 0;
    transform: translateX(50px);
  }

  .scale-in {
    opacity: 0;
    transform: scale(0);
  }

  .parallax {
    will-change: transform;
  }

  /* Smooth reveal animations */
  .reveal {
    position: relative;
    overflow: hidden;
  }

  .reveal::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: #fff;
    transform: translateX(-100%);
    transition: transform 0.8s ease-in-out;
  }

  .reveal.revealed::after {
    transform: translateX(100%);
  }
</style> 